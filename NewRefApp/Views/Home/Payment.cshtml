@model dynamic

@{
    ViewData["Title"] = "Transaction";
    var amount = ViewBag.Amount;
    var paymentType = ViewBag.PaymentType;
    var upiId = ViewBag.UpiId;
    var qrCode = ViewBag.QrCode;
    var bankDetail = ViewBag.BankDetail;
}

<div class="container py-5">
    <div class="bg-[#1f1f1f] text-black rounded-3 shadow p-4 mb-4 bg-white">
        <h4 class="text-xl font-semibold mb-2">Transaction Summary</h4>
        <div class="flex justify-between flex-wrap">
            <p>Amount: <strong>₹@amount</strong></p>
            <p>Payment Type: <strong>@paymentType</strong></p>
        </div>
    </div>

    <div class="">
        <div class="flex flex-wrap gap-2 mb-4">
            <button class="tab active" data-tab="details">Payment Details</button>
            @if (paymentType == "UPI" && !string.IsNullOrEmpty(qrCode))
            {
                <button class="tab ms-3" data-tab="qr">QR Code</button>
            }
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="details">
            <div class="bg-[#2a2a2a] text-white p-2 rounded-xl">
                <h5 class="text-lg font-semibold mb-3">Payment Information</h5>
                @if (paymentType == "UPI" && !string.IsNullOrEmpty(upiId) && upiId != "No active admin UPI found")
                {
                    <p><strong>UPI ID:</strong> @upiId</p>
                }
                else if (paymentType == "BankTransfer" && bankDetail != null)
                {
                    <p><strong>Account Number:</strong> @bankDetail.AccountNumber</p>
                    <p><strong>Account Name:</strong> @bankDetail.AccountName</p>
                    <p><strong>Bank Name:</strong> @bankDetail.BankName</p>
                    <p><strong>IFSC Code:</strong> @bankDetail.IFSCCode</p>
                }
                else
                {
                    <p class="text-warning">No active @paymentType details available.</p>
                }
            </div>
        </div>

        @if (paymentType == "UPI" && !string.IsNullOrEmpty(qrCode))
        {
            <div class="tab-content" id="qr" style="display: none;">
                <div class="bg-[#2a2a2a] text-white text-center rounded-xl">
                    <h5 class="text-lg font-semibold mb-3">Scan & Pay</h5>
                    <img src="data:image/png;base64,@qrCode" alt="QR Code" class="w-48 h-48 mx-auto rounded mb-3" />
                    <p>Scan with your UPI app to pay ₹@amount to <strong>@upiId</strong></p>
                </div>
            </div>
        }

        <!-- Confirmation Form -->
        <div class="bg-[#2a2a2a] text-white p-2 my-2 rounded-xl">
            <h5 class="text-lg font-semibold mb-3">Confirm Transaction</h5>
            <form id="utrForm" asp-action="SubmitDeposit" asp-controller="Home" method="post">
                <div class="form-group">
                    <label for="utrNumber">UTR Number</label>
                    <input type="text" placeholder="UTR Number" class="form-control bg-[#1f1f1f] text-black border border-pink-500 mt-1"
                           id="utrNumber" name="utrNumber"
                           pattern="^[0-9A-Za-z]{6,12}$" required
                           oninput="validateUtr()" />
                    <small class="text-danger" id="utrError"></small>
                </div>
                <button type="submit" id="submitBtn" class="btn mt-3 px-4 py-2 bg-pink-600 hover:bg-pink-500 text-white font-semibold rounded" disabled>Submit</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tabs = document.querySelectorAll(".tab");
            const contents = document.querySelectorAll(".tab-content");
            const utrInput = document.getElementById("utrNumber");
            const submitBtn = document.getElementById("submitBtn");
            const utrError = document.getElementById("utrError");

            tabs.forEach((tab) => {
                tab.addEventListener("click", () => {
                    tabs.forEach((t) => t.classList.remove("active"));
                    tab.classList.add("active");

                    const selected = tab.getAttribute("data-tab");
                    contents.forEach((c) => {
                        c.style.display = c.id === selected ? "block" : "none";
                    });
                });
            });

            function validateUtr() {
                const utrValue = utrInput.value.trim();
                const isValid = /^[0-9A-Za-z]{6,12}$/.test(utrValue);
                submitBtn.disabled = !utrValue || !isValid;
                utrError.textContent = !utrValue ? "UTR is required" :
                    (!isValid ? "UTR must be 6–12 alphanumeric characters" : "");
                utrError.style.display = utrError.textContent ? "block" : "none";
            }

            utrInput.addEventListener("input", validateUtr);

            $("#utrForm").on("submit", function (e) {
                e.preventDefault();
                const utrNumber = utrInput.value.trim();
                const rareentUser = sessionStorage.getItem("rareentUser");
                if (/^[0-9A-Za-z]{6,12}$/.test(utrNumber)) {
                    $('#loaderModal').modal('show');
                    $.ajax({
                        url: "/Home/SubmitDeposit",
                        type: "POST",
                        data: {
                            utrNumber: utrNumber,
                            amount: @amount,
                            paymentType: "@paymentType",
                            upiId: "@upiId",
                            userId: rareentUser
                        },
                        success: function (response) {
                            $('#loaderModal').modal('hide');
                            alert(response.message);
                            if (response.success) {
                                window.location.href = "/Home/Transactions";
                            }
                        },
                        error: function (xhr, status, error) {
                            $('#loaderModal').modal('hide');
                            alert("Error submitting deposit: " + error);
                        }
                    });
                }
            });
        });
    </script>
}

<style>
    body {
        background-color: var(--bg-pink-gradient-end);
    }

    .tab-wrapper {
        max-width: 700px;
        margin: 0 auto;
    }

    .tab {
        flex: 1 1 auto;
        padding: 10px 15px;
        border: none;
        background: var(--bg-pink-gradient-start);
        color: #eee;
        border-radius: 6px;
        cursor: pointer;
        transition: 0.3s ease;
        text-align: center;
        font-weight: 500;
    }

    .tab.active {
            background-color: var(--amount-btn-hover);
            color: #ffffff;
        font-weight: bold;
    }

    .tab-content {
        display: none;
    }

    .tab-content#details {
        display: block;
    }

    .btn:disabled {
        background-color: #555 !important;
        cursor: not-allowed;
    }

    #utrError {
        display: none;
    }

    .bg-pink-600 {
        background: var(--amount-btn-hover);
    }

    img.h-48{
        height: 40vw;
    }
    @@media (max-width: 600px) {
        .flex {
            flex-direction: column;
        }
    }
</style>
