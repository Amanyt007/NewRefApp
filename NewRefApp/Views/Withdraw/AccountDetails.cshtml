@model NewRefApp.Data.DTOs.AccountUpdateDTO

@{
    ViewData["Title"] = "Account Details";
}

<div class="container mt-4">
    <div class="card bg-dark text-white p-3 mb-3">
        <h5>Account Details</h5>
    </div>

    <div class="card bg-secondary text-white p-3">
        <form id="accountForm" asp-action="UpdateAccountDetails" method="post" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="UserId" />

            <!-- Bank Details -->
            <h4>Bank Details</h4>
            <div class="form-group">
                <label asp-for="AccountNumber" class="control-label">Account Number</label>
                <input asp-for="AccountNumber" class="form-control" id="AccountNumber" value="@Model.AccountNumber" />
                <span asp-validation-for="AccountNumber" class="text-danger" id="AccountNumber-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="IFSCCode" class="control-label">IFSC Code</label>
                <input asp-for="IFSCCode" class="form-control" id="IFSCCode" value="@Model.IFSCCode" />
                <span asp-validation-for="IFSCCode" class="text-danger" id="IFSCCode-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="AccountName" class="control-label">Account Holder Name</label>
                <input asp-for="AccountName" class="form-control" id="AccountName" value="@Model.AccountName" />
                <span asp-validation-for="AccountName" class="text-danger" id="AccountName-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="BankName" class="control-label">Bank Name</label>
                <input asp-for="BankName" class="form-control" id="BankName" value="@Model.BankName" />
                <span asp-validation-for="BankName" class="text-danger" id="BankName-error"></span>
            </div>
            <div class="form-group">
                <label asp-for="BankLocation" class="control-label">Bank Location</label>
                <input asp-for="BankLocation" class="form-control" id="BankLocation" value="@Model.BankLocation" />
                <span asp-validation-for="BankLocation" class="text-danger" id="BankLocation-error"></span>
            </div>

            <!-- UPI Details -->
            <h4 class="mt-4">UPI Details</h4>
            <div class="form-group">
                <label asp-for="UpiId" class="control-label">UPI ID <i class="fas fa-info-circle" data-toggle="tooltip" title="Enter your UPI ID (e.g., user@paytm, user@okicici)"></i></label>
                <input asp-for="UpiId" class="form-control" id="UpiId" value="@Model.UpiId" />
                <span asp-validation-for="UpiId" class="text-danger" id="UpiId-error"></span>
            </div>

            <!-- Security -->
            <h4 class="mt-4">Security</h4>
            <div class="form-group position-relative">
                <label asp-for="TransactionPassword" class="control-label">Withdrawal Password</label>
                <input id="transactionPassword" asp-for="TransactionPassword" type="password" class="form-control pr-5" value="@Model.TransactionPassword" />
                <span id="togglePassword" style="position: absolute; top: 38px; right: 15px; cursor: pointer;">
                    <i class="fa fa-eye text-primary" id="eyeIcon"></i>
                </span>
                <span asp-validation-for="TransactionPassword" class="text-danger" id="TransactionPassword-error"></span>
            </div>

            <div class="form-group mt-3">
                <button type="button" id="submitBtn" class="btn btn-primary">Update All Changes</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal for Confirmation -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Update</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to update your account details?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmBtn" class="btn btn-primary">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

            // Password toggle functionality
            document.getElementById("togglePassword").addEventListener("click", function () {
                const passwordInput = document.getElementById("transactionPassword");
                const eyeIcon = document.getElementById("eyeIcon");
                if (passwordInput.type === "password") {
                    passwordInput.type = "text";
                    eyeIcon.classList.remove("fa-eye");
                    eyeIcon.classList.add("fa-eye-slash");
                } else {
                    passwordInput.type = "password";
                    eyeIcon.classList.remove("fa-eye-slash");
                    eyeIcon.classList.add("fa-eye");
                }
            });

            // Client-side validation
            function validateForm() {
                let isValid = true;
                const fields = [
                    { id: "AccountNumber", message: "Account Number is required." },
                    { id: "IFSCCode", message: "IFSC Code is required." },
                    { id: "AccountName", message: "Account Holder Name is required." },
                    { id: "BankName", message: "Bank Name is required." },
                    { id: "BankLocation", message: "Bank Location is required." },
                    { id: "UpiId", message: "UPI ID is required." },
                    { id: "transactionPassword", message: "Withdrawal Password is required." }
                ];

                fields.forEach(field => {
                    const input = document.getElementById(field.id);
                    if (input) {
                        const errorSpan = document.getElementById(`${field.id}-error`);
                        if (errorSpan) {
                            if (!input.value.trim()) {
                                errorSpan.textContent = field.message;
                                isValid = false;
                            } else {
                                errorSpan.textContent = "";
                            }
                        }
                    }
                });

                return isValid;
            }

            // Submit button click handler
            document.getElementById("submitBtn").addEventListener("click", function () {
                if (validateForm()) {
                    const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
                    modal.show();
                }
            });

            // Confirm button in modal
            document.getElementById("confirmBtn").addEventListener("click", function () {
                document.getElementById("accountForm").submit();
            });
        });
    </script>
}